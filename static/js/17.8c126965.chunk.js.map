{"version":3,"sources":["../node_modules/@material-ui/core/FormGroup/formGroupClasses.js","../node_modules/@material-ui/core/FormGroup/FormGroup.js","../node_modules/@material-ui/core/FormControlLabel/formControlLabelClasses.js","../node_modules/@material-ui/core/FormControlLabel/FormControlLabel.js","../node_modules/@material-ui/core/Switch/switchClasses.js","../node_modules/@material-ui/core/Switch/Switch.js","../node_modules/@material-ui/core/FormControl/useFormControl.js","../node_modules/@material-ui/core/FormControl/FormControlContext.js","../node_modules/@material-ui/core/internal/switchBaseClasses.js","../node_modules/@material-ui/core/internal/SwitchBase.js"],"names":["getFormGroupUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","FormGroupRoot","styled","name","overridesResolver","props","styles","styleProps","_extends","root","row","display","flexDirection","flexWrap","FormGroup","React","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","getFormControlLabelUtilityClasses","formControlLabelClasses","FormControlLabelRoot","label","capitalize","labelPlacement","theme","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","disabled","color","palette","text","FormControlLabel","componentProps","control","disabledProp","disableTypography","muiFormControl","useFormControl","controlProps","forEach","key","_jsxs","children","type","Typography","component","typography","getSwitchUtilityClass","switchClasses","SwitchRoot","edge","size","width","height","overflow","padding","boxSizing","position","flexShrink","zIndex","colorAdjust","thumb","switchBase","checked","transform","SwitchSwitchBase","SwitchBase","input","top","left","mode","common","white","grey","transition","transitions","create","duration","shortest","track","opacity","backgroundColor","alpha","action","active","hoverOpacity","main","lighten","darken","SwitchTrack","borderRadius","black","SwitchThumb","boxShadow","shadows","Switch","sx","composedClasses","icon","checkedIcon","FormControlContext","getSwitchBaseUtilityClass","SwitchBaseRoot","ButtonBase","skipSx","SwitchBaseInput","margin","autoFocus","checkedProp","defaultChecked","disableFocusRipple","id","inputProps","inputRef","onBlur","onChange","onFocus","readOnly","required","tabIndex","value","useControlled","controlled","default","Boolean","state","setCheckedState","hasLabelFor","centerRipple","focusRipple","role","undefined","event","nativeEvent","defaultPrevented","target"],"mappings":"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","file":"static/js/17.8c126965.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getFormGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiFormGroup', slot);\n}\nconst formGroupClasses = generateUtilityClasses('MuiFormGroup', ['root', 'row']);\nexport default formGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"row\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getFormGroupUtilityClass } from './formGroupClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    row\n  } = styleProps;\n  const slots = {\n    root: ['root', row && 'row']\n  };\n  return composeClasses(slots, getFormGroupUtilityClass, classes);\n};\n\nconst FormGroupRoot = styled('div', {\n  name: 'MuiFormGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.root, styleProps.row && styles.row);\n  }\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  display: 'flex',\n  flexDirection: 'column',\n  flexWrap: 'wrap'\n}, styleProps.row && {\n  flexDirection: 'row'\n}));\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nconst FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormGroup'\n  });\n\n  const {\n    className,\n    row = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const styleProps = _extends({}, props, {\n    row\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(FormGroupRoot, _extends({\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   * @default false\n   */\n  row: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default FormGroup;","import { generateUtilityClasses, generateUtilityClass } from '@material-ui/unstyled';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label']);\nexport default formControlLabelClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"className\", \"componentProps\", \"control\", \"disabled\", \"disableTypography\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { useFormControl } from '../FormControl';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    disabled,\n    labelPlacement\n  } = styleProps;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`],\n    label: ['label', disabled && 'disabled']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\n\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(styleProps.labelPlacement)}`]);\n  }\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  }\n}, styleProps.labelPlacement === 'start' && {\n  flexDirection: 'row-reverse',\n  marginLeft: 16,\n  // used for row presentation of radio/checkbox\n  marginRight: -11\n}, styleProps.labelPlacement === 'top' && {\n  flexDirection: 'column-reverse',\n  marginLeft: 16\n}, styleProps.labelPlacement === 'bottom' && {\n  flexDirection: 'column',\n  marginLeft: 16\n}, {\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: theme.palette.text.disabled\n    }\n  }\n}));\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n\n  const {\n    className,\n    componentProps = {},\n    control,\n    disabled: disabledProp,\n    disableTypography,\n    label,\n    labelPlacement = 'end'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl();\n  let disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  const controlProps = {\n    disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n\n  const styleProps = _extends({}, props, {\n    disabled,\n    label,\n    labelPlacement\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), label.type === Typography || disableTypography ? label : /*#__PURE__*/_jsx(Typography, _extends({\n      component: \"span\",\n      className: classes.label\n    }, componentProps.typography, {\n      children: label\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentProps: PropTypes.object,\n\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getSwitchUtilityClass(slot) {\n  return generateUtilityClass('MuiSwitch', slot);\n}\nconst switchClasses = generateUtilityClasses('MuiSwitch', ['root', 'edgeStart', 'edgeEnd', 'switchBase', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium', 'checked', 'disabled', 'input', 'thumb', 'track']);\nexport default switchClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"edge\", \"size\", \"sx\"];\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { alpha, darken, lighten } from '@material-ui/system';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport switchClasses, { getSwitchUtilityClass } from './switchClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    edge,\n    size,\n    color,\n    checked,\n    disabled\n  } = styleProps;\n  const slots = {\n    root: ['root', edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`],\n    switchBase: ['switchBase', `color${capitalize(color)}`, checked && 'checked', disabled && 'disabled'],\n    thumb: ['thumb'],\n    track: ['track'],\n    input: ['input']\n  };\n  const composedClasses = composeClasses(slots, getSwitchUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst SwitchRoot = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.root, styleProps.edge && styles[`edge${capitalize(styleProps.edge)}`], styles[`size${capitalize(styleProps.size)}`]);\n  }\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  display: 'inline-flex',\n  width: 34 + 12 * 2,\n  height: 14 + 12 * 2,\n  overflow: 'hidden',\n  padding: 12,\n  boxSizing: 'border-box',\n  position: 'relative',\n  flexShrink: 0,\n  zIndex: 0,\n  // Reset the stacking context.\n  verticalAlign: 'middle',\n  // For correct alignment with the text.\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n}, styleProps.edge === 'start' && {\n  marginLeft: -8\n}, styleProps.edge === 'end' && {\n  marginRight: -8\n}, styleProps.size === 'small' && {\n  width: 40,\n  height: 24,\n  padding: 7,\n  [`& .${switchClasses.thumb}`]: {\n    width: 16,\n    height: 16\n  },\n  [`& .${switchClasses.switchBase}`]: {\n    padding: 4,\n    [`&.${switchClasses.checked}`]: {\n      transform: 'translateX(16px)'\n    }\n  }\n}));\nconst SwitchSwitchBase = styled(SwitchBase, {\n  name: 'MuiSwitch',\n  slot: 'SwitchBase',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.switchBase, styles.input, styleProps.color !== 'default' && styles[`color${capitalize(styleProps.color)}`]);\n  }\n})(({\n  theme\n}) => ({\n  /* Styles applied to the internal `SwitchBase` component's `root` class. */\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 1,\n  // Render above the focus ripple.\n  color: theme.palette.mode === 'light' ? theme.palette.common.white : theme.palette.grey[300],\n  transition: theme.transitions.create(['left', 'transform'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${switchClasses.checked}`]: {\n    transform: 'translateX(20px)'\n  },\n  [`&.${switchClasses.disabled}`]: {\n    color: theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[600]\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    opacity: 0.5\n  },\n  [`&.${switchClasses.disabled} + .${switchClasses.track}`]: {\n    opacity: theme.palette.mode === 'light' ? 0.12 : 0.2\n  },\n  [`& .${switchClasses.input}`]: {\n    /* Styles applied to the internal SwitchBase component's input element. */\n    left: '-100%',\n    width: '300%'\n  }\n}), ({\n  theme,\n  styleProps\n}) => _extends({\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, styleProps.color !== 'default' && {\n  [`&.${switchClasses.checked}`]: {\n    color: theme.palette[styleProps.color].main,\n    '&:hover': {\n      backgroundColor: alpha(theme.palette[styleProps.color].main, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    [`&.${switchClasses.disabled}`]: {\n      color: theme.palette.mode === 'light' ? lighten(theme.palette[styleProps.color].main, 0.62) : darken(theme.palette[styleProps.color].main, 0.55)\n    }\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    backgroundColor: theme.palette[styleProps.color].main\n  }\n}));\nconst SwitchTrack = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Track',\n  overridesResolver: (props, styles) => styles.track\n})(({\n  theme\n}) => ({\n  /* Styles applied to the track element. */\n  height: '100%',\n  width: '100%',\n  borderRadius: 14 / 2,\n  zIndex: -1,\n  transition: theme.transitions.create(['opacity', 'background-color'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  backgroundColor: theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white,\n  opacity: theme.palette.mode === 'light' ? 0.38 : 0.3\n}));\nconst SwitchThumb = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Thumb',\n  overridesResolver: (props, styles) => styles.thumb\n})(({\n  theme\n}) => ({\n  /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n  boxShadow: theme.shadows[1],\n  backgroundColor: 'currentColor',\n  width: 20,\n  height: 20,\n  borderRadius: '50%'\n}));\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSwitch'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    edge = false,\n    size = 'medium',\n    sx\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const styleProps = _extends({}, props, {\n    color,\n    edge,\n    size\n  });\n\n  const classes = useUtilityClasses(styleProps);\n\n  const icon = /*#__PURE__*/_jsx(SwitchThumb, {\n    className: classes.thumb,\n    styleProps: styleProps\n  });\n\n  return /*#__PURE__*/_jsxs(SwitchRoot, {\n    className: clsx(classes.root, className),\n    sx: sx,\n    styleProps: styleProps,\n    children: [/*#__PURE__*/_jsx(SwitchSwitchBase, _extends({\n      type: \"checkbox\",\n      icon: icon,\n      checkedIcon: icon,\n      ref: ref,\n      styleProps: styleProps\n    }, other, {\n      classes: _extends({}, classes, {\n        root: classes.switchBase\n      })\n    })), /*#__PURE__*/_jsx(SwitchTrack, {\n      className: classes.track,\n      styleProps: styleProps\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Switch;","import * as React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst FormControlContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\n\nexport function useFormControl() {\n  return React.useContext(FormControlContext);\n}\nexport default FormControlContext;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = styleProps;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\n\nconst SwitchBaseRoot = styled(ButtonBase, {\n  skipSx: true\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  padding: 9,\n  borderRadius: '50%'\n}, styleProps.edge === 'start' && {\n  marginLeft: styleProps.size === 'small' ? -3 : -12\n}, styleProps.edge === 'end' && {\n  marginRight: styleProps.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input', {\n  skipSx: true\n})({\n  /* Styles applied to the internal input element. */\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n/**\n * @ignore - internal component.\n */\n\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    className,\n    defaultChecked,\n    disabled: disabledProp,\n    disableFocusRipple = false,\n    edge = false,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required,\n    tabIndex,\n    type,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    setCheckedState(event.target.checked);\n\n    if (onChange) {\n      onChange(event);\n    }\n  };\n\n  let disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n\n  const styleProps = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    styleProps: styleProps,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor && id,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      styleProps: styleProps,\n      tabIndex: tabIndex,\n      type: type,\n      value: value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;"],"sourceRoot":""}